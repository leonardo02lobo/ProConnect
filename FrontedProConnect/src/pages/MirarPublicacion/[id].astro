---
import Layout from "../../layouts/Layout.astro";
import Comentario from "../../components/Tarjetas/Comentario.astro";
import type { PublicacionModel } from "../../models/Publicacion";
import { ObtenerNumerosLikes, ObtenerPublicacion } from "../../services/PublicacionesService";
import type { Comentarios } from "../../models/Comentarios";
import { ObtenerComentarios } from "../../services/ComentariosService"

export async function getStaticPaths() {
    const response = await fetch("http://localhost:3000/api/Publicacion", {
        method: "GET",
        headers: {
            "Content-Type": "application/json",
        },
    });

    const data = await response.json();
    return data.map((publicacion: { id: number }) => ({
        params: { id: publicacion.id.toString() },
    }));
}

const { id } = Astro.params;

const result: string[] = await ObtenerNumerosLikes(id);

const publicaciones: PublicacionModel = await ObtenerPublicacion(id);

const comentarios: Comentarios[] = await ObtenerComentarios(id);
---

<Layout title="Publicacion">
    <main class="col-span-2 p-6 mt-20">
        <header class="flex flex-row justify-between items-center gap-4s">
            <div class="flex flex-col gap-4">
                <a href="/" class="hover:text-blue-600">Volver</a>
                <a href="" id="Perfil" class="flex flex-row gap-4 items-center">
                    <img
                        src={publicaciones.usuario.fotoPerfil ||
                            "/assets/ImagenesPerfil/predeterminado.png"}
                        alt="perfil"
                        class="w-13 rounded-4xl"
                    />
                    <span>{publicaciones.usuario.nombreUsuario}</span>
                </a>
            </div>
        </header>
        <section class="flex flex-col gap-4 pt-4">
            <h1 class="text-4xl dark:text-gray-400 text-black">
                {publicaciones.titulo}
            </h1>
            <span class="dark:text-gray-200 text-black"
                >{publicaciones.contenido}</span
            >
            {
                publicaciones.foto && (
                    <img
                        src={publicaciones.foto}
                        alt="fotoPost"
                        class="w-[100%] rounded-3xl"
                    />
                )
            }
            <span>{result.length} Likes</span>
            <div class="flex flex-row gap-4" id="botonLike">
                <button
                    class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3.5 px-4 rounded-lg cursor-pointer"
                    id="like"
                >
                    Like
                </button>
            </div>
            <div>
                <h1 class="font-bold">Comentarios</h1>
                <div class="flex flex-row gap-4">
                    <img
                        src={publicaciones.usuario.fotoPerfil ||
                            "/assets/ImagenesPerfil/predeterminado.png"}
                        alt=""
                        class="rounded-full w-20"
                    />
                    <textarea
                        name="contenido"
                        id="contenido"
                        placeholder="Escribe un comentario"
                        class="w-full resize-none bg-white text-black rounded-2xl p-2"
                    ></textarea>
                    <button
                        class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3.5 px-4 rounded-md cursor-pointer"
                        id="comentar"
                    >
                        Comentar
                    </button>
                </div>
            </div>
            <div>
                {
                    comentarios.length > 0 ? (
                        comentarios.map((comentario) => (
                            <Comentario
                                id={comentario.id}
                                nombre={comentario.usuario.nombreUsuario}
                                imagenPerfil={comentario.usuario.fotoPerfil}
                                comentario={comentario.contenido}
                                fecha={comentario.fecha}
                            />
                        ))
                    ) : (
                        <span>
                            No existen Comentarios en esta publicacion, se el
                            primero en comentar
                        </span>
                    )
                }
            </div>
        </section>
    </main>
</Layout>
<script src="./../../scripts/ts/Like.ts"></script>
<script src="./../../scripts/ts/CrearComentario.ts"></script>
<script src="./../../scripts/js/ConectarUsuario.js"></script>
<script src="./../../scripts/js/IrPerfil.js"></script>